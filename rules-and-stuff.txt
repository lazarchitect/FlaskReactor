
RULES FOR WEBSOCKET COMMUNICATION

Process
    Client side has some processing to determine valid moves
    User clicks on the board, and then clicks on some valid move.
    client send the move to the server.
    NON-MVP server re-validates. if its NOT valid, tell that client to undo. (hopefully this case will be rare since its considered for user fuckery)
    assuming the move is valid, we now have to tell the opponent (and all spectators) what the move was.
    how to get connected to all listeners? well...

Server Recieves a client socket
    when a server recieves a client connection, it gets assigned a tornado WebSocketHandler (WSH), 
    and its open() function runs.
    In this open() function, the WSH gets added to a dict whose keys are the game IDs.
    In this way, 

Server -> Client communications
    Server will send the client some JSON. Client recieves this json on socket.data.
    The JSON determines what the client side should do to the view.
    JSON object will have a field 'type' denoting move, chat message, or something else.
    if type == "move":
        Field 'move' will have a chess move of the form 'A6:A8' so the piece on A6 moved to A8.
        The client should set A8.piece to A6.piece, and set A6.piece to empty.
        JSON should also contain a boolean 'check' field, indicating that the player that did NOT just move is now in check.
        (It can also have 'checkmate' and 'stalemate' boolean fields.)
		